
---
# Show greeting from env and defaults
- name: Show combined greeting
  ansible.builtin.debug:
    msg: "{{ greeting }} {{ common_message | upper() }}"

# ================= Linux: NTP (chrony) =================
- name: Ensure chrony is installed (Linux)
  ansible.builtin.package:
    name: chrony
    state: present
  when: ansible_system == "Linux"
  tags: [ntp, linux]

- name: Deploy chrony.conf with env NTP server (Linux)
  ansible.builtin.template:
    src: chrony.conf.j2
    dest: /etc/chrony/chrony.conf
    owner: root
    group: root
    mode: "0644"
  notify: Restart chrony
  when: ansible_system == "Linux"
  tags: [ntp, linux]

# ================= Linux: DNS (/etc/resolv.conf) =================
- name: Configure /etc/resolv.conf from template (Linux)
  ansible.builtin.template:
    src: resolv.conf.j2
    dest: /etc/resolv.conf
    owner: root
    group: root
    mode: "0644"
  when: ansible_system == "Linux"
  tags: [dns, linux]


# ================= Windows: NTP =================
- name: Query current Windows NTP peers
  ansible.windows.win_shell: w32tm /query /peers
  register: w32tm_peers
  changed_when: false
  when: ansible_system == "Win32NT"
  tags: [ntp, windows]

- name: Configure Windows Time Service to use env NTP server (only if needed)
  ansible.windows.win_shell: |
    w32tm /config /manualpeerlist:"{{ ntp_server }}" /syncfromflags:manual /update
    Restart-Service w32time
    w32tm /resync
  when:
    - ansible_system == "Win32NT"
    - w32tm_peers.stdout is not search(ntp_server)
  tags: [ntp, windows]

# ================= Windows: DNS =================
- name: Set DNS servers on all adapters (Windows)
  ansible.windows.win_dns_client:
    adapter_names: ['*']
    ipv4_addresses: "{{ dns_servers | default([]) }}"
  when: ansible_system == "Win32NT"
  tags: [dns, windows]
